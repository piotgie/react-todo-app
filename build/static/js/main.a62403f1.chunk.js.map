{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","updatedTodos","todoId","newValue","prev","item","removeArr","filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNA4DeA,MA1Df,SAAkBC,GAAQ,IAAD,EAEKC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAF9C,mBAEdC,EAFc,KAEPC,EAFO,KAIfC,EAAWC,iBAAO,MAExBC,qBAAU,WACNF,EAASG,QAAQC,WAGrB,IAAMC,EAAe,SAACC,GAClBP,EAASO,EAAEC,OAAOV,QAatB,OACI,sBAAMW,UAAU,YAAYC,SAXX,SAACH,GAClBA,EAAEI,iBAEFhB,EAAMe,SAAS,CACXE,GAAIC,KAAKC,MAAoB,IAAdD,KAAKE,UACpBC,KAAMjB,IAEVC,EAAS,KAIT,SACKL,EAAME,KACH,qCAEI,uBACAoB,KAAK,OACLC,YAAY,mBACZpB,MAAOC,EACPoB,KAAK,OACLV,UAAU,kBACVW,SAAUd,EACVe,IAAKpB,IAEL,wBAAQQ,UAAU,mBAAlB,4BAGJ,qCACI,uBACAQ,KAAK,OACLC,YAAY,aACZpB,MAAOC,EACPoB,KAAK,OACLV,UAAU,aACVW,SAAUd,EACVe,IAAKpB,IAEL,wBAAQQ,UAAU,cAAlB,4B,eCXLa,MApCf,YAA8D,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,WAAa,EAEjC9B,mBAAS,CAC7BgB,GAAI,KACJd,MAAO,KAJ8C,mBAElDD,EAFkD,KAE5C8B,EAF4C,KAezD,OAAI9B,EAAKe,GACE,cAAC,EAAD,CAAUf,KAAMA,EAAMa,SATZ,SAAAZ,GACjB4B,EAAW7B,EAAKe,GAAId,GACpB6B,EAAQ,CACJf,GAAI,KACJd,MAAO,QASRyB,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACb,sBAAKrB,UAAWoB,EAAKE,WAAa,oBAAsB,WAAxD,UACI,qBAAmBC,QAAS,kBAAKR,EAAaK,EAAKjB,KAAnD,SACKiB,EAAKb,MADAa,EAAKjB,IAGf,sBAAKH,UAAU,QAAf,UACI,cAAC,IAAD,CACAuB,QAAS,kBAAKP,EAAWI,EAAKjB,KAC9BH,UAAU,gBAEV,cAAC,IAAD,CAAQuB,QAAS,kBAAKL,EAAQ,CAACf,GAAIiB,EAAKjB,GAAId,MAAO+B,EAAKb,eATSc,OCqBlEG,MA5Cf,WAAqB,IAAD,EACUrC,mBAAS,IADnB,mBACT2B,EADS,KACFW,EADE,KAmChB,OACI,gCACI,4DACA,cAAC,EAAD,CAAUxB,SAnCF,SAACmB,GACb,GAAKA,EAAKb,OAAQ,QAAQmB,KAAKN,EAAKb,MAApC,CAIA,IAAMoB,EAAQ,CAAIP,GAAJ,mBAAaN,IAE3BW,EAASE,OA6BL,cAAC,EAAD,CAAMb,MAAOA,EAAOC,aAdP,SAAAZ,GACjB,IAAIyB,EAAed,EAAMK,KAAI,SAAAC,GAIzB,OAHIA,EAAKjB,KAAOA,IACZiB,EAAKE,YAAcF,EAAKE,YAErBF,KAEXK,EAASG,IAO2CX,WA3BrC,SAACY,EAAQC,GACnBA,EAASvB,OAAQ,QAAQmB,KAAKI,EAASvB,OAG5CkB,GAAS,SAAAM,GAAI,OAAIA,EAAKZ,KAAI,SAAAa,GAAI,OAAIA,EAAK7B,KAAO0B,EAASC,EAAWE,SAuBUhB,WAnB7D,SAAAb,GACf,IAAM8B,EAAY,YAAInB,GAAOoB,QAAO,SAAAd,GAAI,OAAIA,EAAKjB,KAAOA,KACxDsB,EAASQ,UCdFE,MARf,WACE,OACE,qBAAKnC,UAAU,WAAf,SACA,cAAC,EAAD,OCHJoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a62403f1.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\n\nfunction TodoForm(props) {\n\n    const [input, setInput] = useState(props.edit ? props.edit.value : '')\n\n    const inputRef = useRef(null)\n\n    useEffect(()=> {\n        inputRef.current.focus()\n    })\n\n    const handleChange = (e)=> {\n        setInput(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        props.onSubmit({\n            id: Math.floor(Math.random()*10000),\n            text: input\n        })\n        setInput('')\n    }\n\n    return (\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\n            {props.edit ? (   \n                <>         \n                \n                    <input \n                    type=\"text\" \n                    placeholder=\"Update your item\" \n                    value={input} \n                    name=\"text\" \n                    className=\"todo-input edit\"\n                    onChange={handleChange}\n                    ref={inputRef}\n                    />\n                    <button className=\"todo-button edit\">Update Todo</button>\n                </> \n            ) : (\n                <>\n                    <input \n                    type=\"text\" \n                    placeholder=\"Add a todo\" \n                    value={input} \n                    name=\"text\" \n                    className=\"todo-input\"\n                    onChange={handleChange}\n                    ref={inputRef}\n                    />\n                    <button className=\"todo-button\">Add Todo</button>\n                </>\n            )}\n        </form> \n    )\n}\n\nexport default TodoForm\n","import React, { useState } from 'react'\nimport TodoForm from './TodoForm'\n// import TodoList from './TodoList'\nimport { RiCloseCircleLine } from 'react-icons/ri'\nimport { TiEdit } from 'react-icons/ti'\n\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\n\n    const [edit, setEdit] = useState({\n        id: null,\n        value: ''\n    })\n\n    const submitUpdate = value => {\n        updateTodo(edit.id, value) \n        setEdit({\n            id: null,\n            value: ''\n        })\n    }\n\n    if (edit.id) {\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\n    }\n\n\n    return todos.map((todo, index) => (\n        <div className={todo.isComplete ? 'todo-row complete' : 'todo-row'} key={index}>\n            <div key={todo.id} onClick={()=> completeTodo(todo.id)}>\n                {todo.text} \n            </div>\n            <div className=\"icons\">\n                <RiCloseCircleLine \n                onClick={()=> removeTodo(todo.id)}\n                className=\"delete-icon\"\n                />\n                <TiEdit onClick={()=> setEdit({id: todo.id, value: todo.text})}/>\n            </div>\n        </div> )\n    )\n}\n\nexport default Todo\n// 26:55","import React, { useState } from 'react'\nimport Todo from './Todo'\nimport TodoForm from './TodoForm'\n\nfunction TodoList() {\n    const [todos, setTodos] = useState([]) \n\n    const addTodo = (todo) => {\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\n            return\n        }\n\n        const newTodos = [todo, ...todos]\n\n        setTodos(newTodos)\n    }\n    const updateTodo = (todoId, newValue) => {\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n            return\n        }\n        setTodos(prev => prev.map(item=> (item.id === todoId ? newValue : item)))\n    }\n\n\n    const removeTodo = id => {\n        const removeArr = [...todos].filter(todo => todo.id !== id)\n        setTodos(removeArr)\n    }\n\n    const completeTodo = id => {\n        let updatedTodos = todos.map(todo => {\n            if (todo.id === id) {\n                todo.isComplete = !todo.isComplete\n            }\n            return todo\n        })\n        setTodos(updatedTodos)\n    }\n\n    return (\n        <div>\n            <h1>Whats the plan for today ?</h1>  \n            <TodoForm onSubmit={addTodo}/> \n            <Todo todos={todos} completeTodo={completeTodo} updateTodo={updateTodo} removeTodo={removeTodo} />\n        </div>\n    )\n}\n\nexport default TodoList\n","import './App.css'\n// import TodoForm from './components/TodoForm'\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n    <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}